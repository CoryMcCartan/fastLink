// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// m_func_par
List m_func_par(List temp, List ptemp, List natemp, IntegerVector limit1, IntegerVector limit2, IntegerVector nlim1, IntegerVector nlim2, IntegerMatrix ind, int threads);
RcppExport SEXP fastLink_m_func_par(SEXP tempSEXP, SEXP ptempSEXP, SEXP natempSEXP, SEXP limit1SEXP, SEXP limit2SEXP, SEXP nlim1SEXP, SEXP nlim2SEXP, SEXP indSEXP, SEXP threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type temp(tempSEXP);
    Rcpp::traits::input_parameter< List >::type ptemp(ptempSEXP);
    Rcpp::traits::input_parameter< List >::type natemp(natempSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type limit1(limit1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type limit2(limit2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nlim1(nlim1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nlim2(nlim2SEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type ind(indSEXP);
    Rcpp::traits::input_parameter< int >::type threads(threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(m_func_par(temp, ptemp, natemp, limit1, limit2, nlim1, nlim2, ind, threads));
    return rcpp_result_gen;
END_RCPP
}
