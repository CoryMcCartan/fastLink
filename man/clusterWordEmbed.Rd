% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clusterWordEmbed.R
\name{clusterWordEmbed}
\alias{clusterWordEmbed}
\title{clusterWordEmbed}
\usage{
clusterWordEmbed(vecA, vecB, nclusters, max.n, min.var,
weighted.kmeans, iter.max)
}
\arguments{
\item{vecA}{The character vector from dataset A}

\item{vecB}{The character vector from dataset B}

\item{nclusters}{The number of clusters to create from the provided data. Either
nclusters = NULL or max.n = NULL.}

\item{max.n}{The maximum size of either dataset A or dataset B in
the largest cluster. Either nclusters = NULL or max.n = NULL}

\item{min.var}{The minimum amount of explained variance (maximum = 1) a
PCA dimension can provide in order to be included in k-means clustering.
Default is .20.}

\item{weighted.kmeans}{Whether to weight the k-means algorithm features by the
explained variance of the included principal component. Default is TRUE.}

\item{iter.max}{Maximum number of iterations for the k-means algorithm.}
}
\value{
\code{clusterWordEmbed} returns a list of length 3:
\item{clusterA}{The cluster assignments for dataset A}
\item{clusterB}{The cluster assignments for dataset B}
\item{n.clusters}{The number of clusters created}
\item{kmeans}{The k-means object output.}
\item{pca}{The PCA object output.}
\item{dims.pca}{The number of dimensions from PCA used for the k-means clustering.}
}
\description{
Use word embedding to create properly sized clusters for matching.
The function first creates a word embedding out of the provided
vectors, and then runs PCA on the matrix. It then takes the first
\code{k} dimensions (where \code{k} is provided by the user) and
k-means is run on that matrix to get the clusters.
}
\examples{
data(samplematch)
cl <- clusterWordEmbed(dfA$firstname, dfB$firstname, nclusters = 3)
}
\author{
Ben Fifield <benfifield@gmail.com>
}

